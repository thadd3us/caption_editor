name: Build and Release DMG

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.0.1)"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag v${{ inputs.version }} already exists"
            exit 1
          fi

      - name: Update package.json version
        run: |
          npm version ${{ inputs.version }} --no-git-tag-version
          echo "Updated version to ${{ inputs.version }}"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:unit

      - name: Build application
        run: npm run build:all

      - name: Package DMG
        run: npm run package:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Find DMG file
        id: find-dmg
        run: |
          DMG_PATH=$(find release -name "*.dmg" -type f | head -n 1)
          if [ -z "$DMG_PATH" ]; then
            echo "Error: No DMG file found in release directory"
            exit 1
          fi
          echo "dmg_path=$DMG_PATH" >> $GITHUB_OUTPUT
          echo "dmg_name=$(basename $DMG_PATH)" >> $GITHUB_OUTPUT
          echo "Found DMG: $DMG_PATH"

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ inputs.version }}" --trailer "Co-authored-by: Sculptor <sculptor@imbue.com>"
          git push

      - name: Create and push tag
        run: |
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.version }}
          name: Release v${{ inputs.version }}
          draft: false
          prerelease: false
          files: ${{ steps.find-dmg.outputs.dmg_path }}
          body: |
            ## VTT Editor v${{ inputs.version }}

            ### Installation
            Download the DMG file below and drag the app to your Applications folder.

            ### Changes
            - Version bump to ${{ inputs.version }}

            ---
            Built automatically by GitHub Actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
